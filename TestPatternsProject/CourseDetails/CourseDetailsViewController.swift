//
//  CourseDetailsViewController.swift
//  TestPatternsProject
//
//  Created by Олег Федоров on 30.12.2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol CourseDetailsDisplayLogic: AnyObject {
    func displayCourseDetails(viewModel: CourseDetailsViewModel)
    func displayFavoriteButtonStatus(viewModel: CourseStatusViewModel)
}

class CourseDetailsViewController: UIViewController {
    
    // MARK: - Properties
    
    var interactor: CourseDetailsBusinessLogic?
    var router: (NSObjectProtocol & CourseDetailsRoutingLogic & CourseDetailsDataPassing)?
        
    private var courseNameLabel: UILabel =  {
        let label = UILabel()
        label.font = UIFont.systemFont(ofSize: 25, weight: .medium)
        label.numberOfLines = 0
        return label
    }()
    
    private var courseImage: UIImageView = {
        let iv = UIImageView()
        iv.contentMode = .scaleToFill
        iv.backgroundColor = .systemGray
        return iv
    }()
    
    private var numberOfLessons: UILabel = {
        let label = UILabel()
        label.font = UIFont.boldSystemFont(ofSize: 16)
        return label
    }()
    
    private var numberOfTests: UILabel = {
        let label = UILabel()
        label.font = UIFont.boldSystemFont(ofSize: 16)
        return label
    }()
    
    private var favoriteButton: UIButton = {
        let button = UIButton(type: .system)
        button.setImage(UIImage(systemName: "heart.fill"), for: .normal)
        button.setPreferredSymbolConfiguration(
            UIImage.SymbolConfiguration(pointSize: 30),
            forImageIn: .normal
        )
        button.addTarget(self,
                         action: #selector(handleFavoriteTap),
                         for: .touchUpInside)
        return button
    }()
    
    // MARK: - Object lifecycle
//    init(course: Course) {
//        super.init(nibName: nil, bundle: nil)
//        self.course = course
//    }
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }

    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
    
    
    // MARK: -  View lifecycle
    override func viewDidLoad() {
        super.viewDidLoad()
    
        passRequest()
        setupUI()
    }
    
    // MARK: - Actions
    
    @objc private func handleFavoriteTap() {
        interactor?.setFavoriteStatus()
    }
    
    private func passRequest() {
        // сигнал интерактору для начала подготавки данных для отображения
        interactor?.provideCourseDetails()
    }
    
    // MARK: - Setup
    
    private func setup() {
        let viewController = self
        let interactor = CourseDetailsInteractor()
        let presenter = CourseDetailsPresenter()
        let router = CourseDetailsRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: - Helpers
    
    private func setupUI() {
        view.backgroundColor = .white
        
        view.addSubview(courseNameLabel)
        courseNameLabel.anchor(top: view.safeAreaLayoutGuide.topAnchor,
                               left: view.leftAnchor,right: view.rightAnchor,
                               paddingTop: 100, paddingLeft: 30,
                               paddingRight: 30)
        courseNameLabel.textAlignment = .center
        
        view.addSubview(courseImage)
        courseImage.setDimensions(height: 250, width: view.frame.width - 60)
        courseImage.anchor(top: courseNameLabel.bottomAnchor, paddingTop: 16)
        courseImage.centerX(inView: view)
        
        view.addSubview(favoriteButton)
        favoriteButton.setDimensions(height: 50, width: 50)
        favoriteButton.anchor(bottom: courseImage.bottomAnchor,
                              right: courseImage.rightAnchor,
                              paddingBottom: 0, paddingRight: 0)
        
        let stack = UIStackView(arrangedSubviews: [numberOfLessons, numberOfTests])
        stack.axis = .vertical
        stack.spacing = 10
        stack.alignment = .leading
        
        view.addSubview(stack)
        stack.anchor(top: courseImage.bottomAnchor, left: view.leftAnchor,
                     right: view.rightAnchor, paddingTop: 20,
                     paddingLeft: 30, paddingRight: 30)
    }
}

extension CourseDetailsViewController: CourseDetailsDisplayLogic {
    
    // отображение данных
    func displayCourseDetails(viewModel: CourseDetailsViewModel) {
        courseNameLabel.text = viewModel.courseName
        numberOfLessons.text = viewModel.numberOfLessons
        numberOfTests.text = viewModel.numberOfTests
        courseImage.image = UIImage(data: viewModel.imageData)
        
        favoriteButton.tintColor = viewModel.isFavorite ? .red : .gray
    }
    
    // изменение данных
    func displayFavoriteButtonStatus(viewModel: CourseStatusViewModel) {
        favoriteButton.tintColor = viewModel.isFavorite ? .red : .gray
    }
}
